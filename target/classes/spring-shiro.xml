<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 会话Session ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    
    <bean id="sessionValidationScheduler"
        class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <property name="sessionValidationInterval" value="1800000" />
        <property name="sessionManager" ref="sessionManager" />
    </bean>
<!--  
         配置 CacheManager. 
    -->    
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/> 
    </bean>
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.MemorySessionDAO"/>
    <!-- 配置Session管理 -->           
    <!-- org.apache.shiro.session.mgt.DefaultSessionManager
    DefaultWebSessionManager 继承了 DefaultSessionManager 这个类
     -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- session超时 30 分钟 -->
        <property name="globalSessionTimeout" value="360000000"/>

        <property name="deleteInvalidSessions" value="true"/>

        <!-- Session调度器，用来检查Session是否还存在的问题 -->
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <!--  设定session的调度管理器-->
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler" />

        <!-- 开启cookie 不然一直登录不上 -->
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
        
        <property name="sessionDAO" ref="sessionDAO"/>
        
    </bean>

    <bean id="resourceCheckFilter" class="com.longersec.blj.interceptor.resourceCheckFilter"/>
    <!-- Shiro Filter id值和web.xml文件配置的过滤器名称相同 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager" />
        <!-- loginUrl认证提交地址，如果没有认证将会请求此地址进行认证，请求此地址将由formAuthenticationFilter进行表单认证 -->
        <property name="loginUrl" value="/login" />
        <!-- 认证成功统一跳转到first.action，建议不配置，shiro认证成功自动到上一个请求路径 -->
        <!--        <property name="successUrl" value="/first.action" />-->
        <!-- 通过unauthorizedUrl指定没有权限操作时跳转页面 -->
        <property name="filters">  
            <map>  
                <entry key="resourceCheckFilter" value-ref="resourceCheckFilter"/>
            </map>  
        </property>
        <property name="unauthorizedUrl" value="/noauth" />
        <property name="filterChainDefinitions">
            <value>
                <!-- 登录可匿名访问 -->
                /bower_components/**= anon
                /js/**= anon
                /images/**= anon
                /download/**= anon
                /logout = logout
                /checkLogin = anon
                /apiLogin = anon
                /qrcode = anon
                /qrcodeInfo = anon
                /send/sendSms = anon
                /systeminfo/checkInfo = anon
                /userLoginType = anon
                /liveSessions/updateKey = anon
                /Operator/deviceReplay = anon
                <!-- 其他的需要授权访问authc -->
                /** = authc,resourceCheckFilter
            </value>
        </property>
    </bean>
    <bean id="myShiroRealm" class="com.longersec.blj.config.UserRealm"/>
    <!--配置shiro的核心securityManager-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="cacheManager" ref="cacheManager"/>
        <property name="realm" ref="myShiroRealm"/>
		<property name="sessionManager" ref="sessionManager"/>
    </bean>

   
    <!-- 用户授权信息Cache 
    <bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager" />-->

    <!--AOP式方法权限检查-->
    <bean  class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>

    <bean  class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <bean class="org.apache.shiro.spring.LifecycleBeanPostProcessor" id="lifecycleBeanPostProcessor" />

    <!-- shiro为集成spring -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <!-- 无权限跳转到登陆页，可自行定义 -->
                <prop key="org.apache.shiro.authz.UnauthorizedException">/login</prop>
            </props>
        </property>
    </bean>
	<!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
    </bean>

</beans>