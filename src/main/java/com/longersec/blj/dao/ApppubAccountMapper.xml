<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.longersec.blj.dao.ApppubAccountDao">
	<resultMap id="BaseResultMap" type="com.longersec.blj.domain.ApppubAccount">
		<id column="id" jdbcType="INTEGER" property="id"/>
		<result column="name" jdbcType="VARCHAR" property="name"/>
		<result column="username" jdbcType="VARCHAR" property="username"/>
		<result column="password" jdbcType="BLOB" property="password"/>
		<result column="department" jdbcType="INTEGER" property="department"/>
		<result column="depart_name" jdbcType="VARCHAR" property="depart_name"/>
		<result column="apppub_program_id" jdbcType="INTEGER" property="apppub_program_id"/>
		<result column="url" jdbcType="VARCHAR" property="url"/>
		<result column="desc" jdbcType="VARCHAR" property="desc"/>
		<result column="appserverip" jdbcType="VARCHAR" property="appserverip"/>
		<result column="appservername" jdbcType="VARCHAR" property="appservername"/>
		<result column="appprogramname" jdbcType="VARCHAR" property="appprogramname"/>
		<result column="favorite_id" jdbcType="INTEGER" property="favorite_id"/>
	</resultMap>

	<resultMap id="apppubAccountRecordCounts" type="java.lang.Long">
		<result column="recordCounts" jdbcType="BIGINT"/>
	</resultMap>

	<insert id="addApppubAccount" parameterType="com.longersec.blj.domain.ApppubAccount">
		INSERT INTO lsblj_apppub_account
		<set>
		
		<if test="name != null">`name`=#{name},</if>
		<if test="username != null">`username`=#{username},</if>
		<if test="department != null">`department`=#{department},</if>
		<if test="password != null">`password`=AES_ENCRYPT(#{password},(select aeskey from lsblj_config_password_encrypt_key limit 1)),</if>
		<if test="apppub_program_id != null">`apppub_program_id`=#{apppub_program_id},</if>
		<if test="apppub_server_id != null">`apppub_server_id`=#{apppub_server_id},</if>
		<if test="url != null">`url`=#{url},</if>
		<if test="desc != null">`desc`=#{desc},</if>
			<if test="apppub != null">`apppub`=#{apppub},</if>
		</set>
	</insert>

	<update id="editApppubAccount" parameterType="com.longersec.blj.domain.ApppubAccount">
		UPDATE lsblj_apppub_account
		<set>
		<if test="name != null">`name`=#{name},</if>
		<if test="username != null">`username`=#{username},</if>
		<if test="department != null">`department`=#{department},</if>
		<if test="password != null">`password`=AES_ENCRYPT(#{password},(select aeskey from lsblj_config_password_encrypt_key limit 1)),</if>
		<if test="apppub_program_id != null">`apppub_program_id`=#{apppub_program_id},</if>
		<if test="apppub_server_id != null">`apppub_server_id`=#{apppub_server_id},</if>
		<if test="url != null">`url`=#{url},</if>
		<if test="desc != null">`desc`=#{desc},</if>
			<if test="apppub != null">`apppub`=#{apppub},</if>
		</set>
		where id=#{id}
	</update>

	<delete id="delApppubAccount" parameterType="java.util.List">
		DELETE FROM lsblj_apppub_account
		where id IN (
		<foreach collection="list" item="item" separator=",">
			#{item}
		</foreach>
		);
		DELETE  FROM `lsblj_access_policy_apppub_account` WHERE apppub_account_id NOT IN (SELECT id FROM `lsblj_apppub_account`)
	</delete>
	
	<select id="findAll" resultMap="BaseResultMap, apppubAccountRecordCounts" resultType="java.lang.Object">
		SELECT 
		SQL_CALC_FOUND_ROWS 
		a.*,b.ip appserverip,b.name appservername,p.name appprogramname,ld.name depart_name FROM lsblj_apppub_account a
		 LEFT JOIN lsblj_apppub_server b ON a.apppub_server_id=b.id
		 LEFT JOIN lsblj_apppub_program p ON a.apppub_program_id=p.id
		 LEFT JOIN lsblj_department ld ON a.department = ld.id
		WHERE 1
		<if test="type==1">AND(
			a.`name` like CONCAT('%',#{sname},'%')
			or a.`username` like CONCAT('%',#{sname},'%')
			or a.`desc` like CONCAT('%',#{sname},'%')
			)</if>
		<if test="depart_ids!=null and depart_ids.size()>0">
			AND a.department in
			<foreach collection="depart_ids" item="item" open="(" close=")" separator=",">
				#{item}
			</foreach> or a.department =0
		</if>
		<if test="type==2">AND a.`name` like CONCAT('%',#{sname},'%')</if>
		<if test="type==3">AND a.`username` like CONCAT('%',#{sname},'%')</if>
		<if test="type==4">AND a.`desc` like CONCAT('%',#{sname},'%')</if>
		<if test="page_start != null and page_length != null">
			ORDER BY a.name ASC
		LIMIT #{page_start},#{page_length}
		</if>
		;SELECT found_rows() AS recordCounts;
	</select>
	
	<select id="queryByappserver" resultMap="BaseResultMap, apppubAccountRecordCounts" resultType="java.lang.Object">
		SELECT
		SQL_CALC_FOUND_ROWS
		a.*,p.name appprogramname,ld.`name` depart_name FROM lsblj_apppub_account a
		LEFT JOIN lsblj_apppub_program p ON a.apppub_program_id=p.id
		LEFT JOIN `lsblj_department` ld ON a.`department` = ld.id
		where
			apppub_server_id = #{apppub_server_id}
			<if test="type==1">AND(
				a.`name` like CONCAT('%',#{sname},'%')
				or a.`username` like CONCAT('%',#{sname},'%')
				or a.`desc` like CONCAT('%',#{sname},'%')
				)
			</if>
			<if test="type==2">AND a.`name` like CONCAT('%',#{sname},'%')</if>
			<if test="type==3">AND a.`username` like CONCAT('%',#{sname},'%')</if>
			<if test="type==5">AND a.`desc` like CONCAT('%',#{sname},'%')</if>
		ORDER BY name ASC
		<if test="page_start != null and page_length != null">
			LIMIT #{page_start},#{page_length}
		</if>
		;SELECT found_rows() AS recordCounts;
	</select>
	
    <select id="total" resultType="java.lang.Integer">
            select count(*) count from lsblj_apppub_account;
    </select>
    
    <select id="totalByProgram" resultType="java.util.Map">
            select a.name, count(*) count from lsblj_apppub_program a LEFT JOIN lsblj_apppub_account b
            	ON b.apppub_program_id=a.id GROUP BY b.id ORDER BY count DESC limit 4;
    </select>

	<select id="checkName" resultType="java.lang.Integer">
		select count(*) from lsblj_apppub_account where id != #{id} and name=#{name};
	</select>

	<select id="getApppubAccountByName" resultType="com.longersec.blj.domain.ApppubAccount">
		select * from lsblj_apppub_account where name=#{name} limit 1;
	</select>

	<select id="selectName" resultType="java.lang.String">
		select name from lsblj_apppub_account where id!=#{id} and name=#{name} limit 1;
	</select>

	<select id="selectAll" resultType="com.longersec.blj.domain.ApppubAccount">
		SELECT
		SQL_CALC_FOUND_ROWS
		a.id,a.name,a.username,a.desc,a.url,a.department,a.apppub_server_id,a.apppub_program_id,b.ip appserverip,b.name appservername,p.name appprogramname,ld.name depart_name FROM lsblj_apppub_account a
		 LEFT JOIN lsblj_apppub_server b ON a.apppub_server_id=b.id
		 LEFT JOIN lsblj_apppub_program p ON a.apppub_program_id=p.id
		 LEFT JOIN lsblj_department ld ON a.department = ld.id
	</select>

	<select id="getById" resultMap="BaseResultMap">
		SELECT (AES_DECRYPT(password,(select aeskey from lsblj_config_password_encrypt_key limit 1)))password,lsblj_apppub_account.*  
		  FROM lsblj_apppub_account WHERE id = #{id}
	</select>
	
	<select id="getApppubAccountByPolicies" resultMap="BaseResultMap, apppubAccountRecordCounts"
	        resultType="java.lang.Object">
		SELECT SQL_CALC_FOUND_ROWS 
			a.id,a.name,p.name appprogramname,s.ip appserverip, s.name appservername,IFNULL(f.id,0) favorite_id 
			FROM lsblj_apppub_account a 
			LEFT JOIN lsblj_apppub_program p ON a.apppub_program_id=p.id  
			LEFT JOIN lsblj_apppub_server s ON a.apppub_server_id=s.id  
			LEFT JOIN lsblj_user_favorite f ON a.id=f.device_id and f.type=1
			<if test="where.history != null">
			LEFT JOIN (
				SELECT device_account_id,count(*) ct FROM lsblj_user_visit v WHERE add_time > UNIX_TIMESTAMP()-7*24*3600 AND v.type=1 AND user_id=#{userid} GROUP BY device_account_id
			) tv ON a.id=tv.device_account_id
			</if>
			where (a.id IN(
					SELECT apppub_account_id FROM lsblj_access_policy_apppub_account WHERE policy_id IN(
							<foreach collection="policy_ids" item="item" separator=",">
							#{item} 
							</foreach>
						,0)
				)
			)
			<if test="where.searchall != null and where.searchall != ''">
			 AND (a.name like CONCAT('%',#{where.searchall},'%') OR p.name like CONCAT('%',#{where.searchall},'%') OR a.username like CONCAT('%',#{where.searchall},'%'))
			</if>
			<if test="where.name != null and where.searchall != ''">
			 AND (a.name like CONCAT('%',#{where.name},'%'))
			</if>
			<if test="where.apppubprogram != null and where.searchall != ''">
			 AND (p.name like CONCAT('%',#{where.apppubprogram},'%'))
			</if>
			<if test="where.username != null and where.username != ''">
			 AND (a.username like CONCAT('%',#{where.username},'%'))
			</if>
			<if test="where.protocol_id != null">
			 AND l.id IN(
				<foreach collection="where.protocol_id" item="item" separator=",">
							#{item,jdbcType=INTEGER}
				</foreach>
			 	)
			</if>
			<if test="where.favorite != null">
			 AND f.id IS NOT NULL 
			</if>
			<if test="where.history != null">
			 AND tv.device_account_id IS NOT NULL 
			</if>
			
			ORDER BY 
			<if test="where.history != null">
			tv.ct DESC,
			</if>
			a.name ASC 
			<if test="page_start != null and page_length != null">
				LIMIT #{page_start},#{page_length}
			</if>
			
			;SELECT found_rows() AS recordCounts;
	</select>
	
	<resultMap id="ApppubAccountMap" type="java.util.Map">
		<result property="username" column="username" jdbcType="VARCHAR"/>
		<result property="realname" column="realname" jdbcType="VARCHAR"/>
		<result property="appserverip" column="appserverip" jdbcType="VARCHAR"/>
		<result property="appservername" column="appservername" jdbcType="VARCHAR"/>
		<result property="apppubaccountname" column="apppubaccountname" jdbcType="VARCHAR"/>
		<result property="appprogramname" column="appprogramname" jdbcType="VARCHAR"/>
		<result property="apppubusername" column="apppubusername" jdbcType="VARCHAR"/>
		<result property="policyname" column="policyname" jdbcType="VARCHAR"/>
	</resultMap> 
	
	<select id="getApppubAccount" resultMap="ApppubAccountMap, apppubAccountRecordCounts" resultType="java.lang.Object">
		SELECT SQL_CALC_FOUND_ROWS 
			a.id,a.name apppubaccountname,a.username apppubusername,IFNULL(pro.name,'') appprogramname,s.ip appserverip, s.name appservername,p.name policyname,user_apppub_account.*
			FROM lsblj_apppub_account a 
			LEFT JOIN lsblj_apppub_program pro ON a.apppub_program_id=pro.id  
			LEFT JOIN lsblj_apppub_server s ON a.apppub_server_id=s.id 
			LEFT JOIN (
				SELECT user.id user_id,user.username,user.realname,paa.apppub_account_id,pu.policy_id 
					FROM lsblj_access_policy_user pu
						LEFT JOIN lsblj_access_policy_apppub_account paa ON paa.policy_id=pu.policy_id 
						LEFT JOIN lsblj_user user ON pu.user_id=user.id where user.id is not null
				UNION DISTINCT
				SELECT user.id user_id,user.username,user.realname,paa.apppub_account_id,pg.policy_id
					FROM lsblj_access_policy_group pg
						LEFT JOIN lsblj_access_policy_apppub_account paa ON paa.policy_id=pg.policy_id 
						LEFT JOIN lsblj_user user ON pg.group_id=user.groupid where user.id is not null
			) user_apppub_account ON user_apppub_account.apppub_account_id=a.id 
			LEFT JOIN lsblj_access_policy p ON p.id=user_apppub_account.policy_id 
			WHERE user_apppub_account.apppub_account_id is not null  and p.id is not null and s.id is not null 
			
			<if test="apppubAccount.name != null and apppubAccount.name != ''">
			 AND (a.name like CONCAT('%',#{apppubAccount.name},'%'))
			</if>
			<if test="apppubAccount.appprogramname != null and apppubAccount.appprogramname != ''">
			 AND (pro.name like CONCAT('%',#{apppubAccount.appprogramname},'%'))
			</if>
			<if test="apppubAccount.username != null and apppubAccount.username != ''">
			 AND (user_apppub_account.username like CONCAT('%',#{apppubAccount.username},'%'))
			</if>
			<if test="apppubAccount.searchAll != null and apppubAccount.searchAll != ''">
			 AND (a.name like CONCAT('%',#{apppubAccount.searchAll},'%') OR pro.name like CONCAT('%',#{apppubAccount.searchAll},'%') OR user_apppub_account.username like CONCAT('%',#{apppubAccount.searchAll},'%'))
			</if>
			ORDER BY a.name ASC 
			<if test="page_start != null and page_length != null">
				LIMIT #{page_start},#{page_length}
			</if>
			
			;SELECT found_rows() AS recordCounts;
	</select>

	<insert id="insertMore">
		INSERT INTO lsblj_apppub_account
		<set>
			<if test="name != null">`name`=#{name},</if>
			<if test="username != null">`username`=#{username},</if>
			<if test="department != null">`department`=#{department},</if>
			<if test="password != null">`password`=AES_ENCRYPT(#{password},(select aeskey from lsblj_config_password_encrypt_key limit 1)),</if>
			<if test="apppub_program_id != null">`apppub_program_id`=#{apppub_program_id},</if>
			<if test="apppub_server_id != null">`apppub_server_id`=#{apppub_server_id},</if>
			<if test="url != null">`url`=#{url},</if>
			<if test="desc != null">`desc`=#{desc},</if>
			<if test="apppub != null">`apppub`=#{apppub},</if>
		</set>
	</insert>

	<update id="editApppubAccountList">
		<foreach collection="ArrayList" item="item" index="index">
			UPDATE lsblj_apppub_account
			<set>
				<if test="item.name != null">`name`=#{item.name},</if>
				<if test="item.username != null">`username`=#{item.username},</if>
				<if test="item.department != null">`department`=#{item.department},</if>
				<if test="item.password != null">`password`=AES_ENCRYPT(#{item.password},(select aeskey from lsblj_config_password_encrypt_key limit 1)),</if>
				<if test="item.apppub_program_id != null">`apppub_program_id`=#{item.apppub_program_id},</if>
				<if test="item.apppub_server_id != null">`apppub_server_id`=#{item.apppub_server_id},</if>
				<if test="item.url != null">`url`=#{item.url},</if>
				<if test="item.desc != null">`desc`=#{item.desc},</if>
				<if test="item.apppub != null">`apppub`=#{item.apppub},</if>
			</set>
			where id=#{item.id};
		</foreach>

	</update>


</mapper>
