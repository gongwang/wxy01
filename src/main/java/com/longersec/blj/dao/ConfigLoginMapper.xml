<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.longersec.blj.dao.ConfigLoginDao">
	<resultMap id="BaseResultMap" type="com.longersec.blj.domain.ConfigLogin">
		<id column="id" jdbcType="INTEGER" property="id"/>
		<result column="lock_type" jdbcType="INTEGER" property="lock_type"/>
		<result column="lock_try_count" jdbcType="INTEGER" property="lock_try_count"/>
		<result column="lock_time_length" jdbcType="INTEGER" property="lock_time_length"/>
		<result column="lock_count_reset" jdbcType="INTEGER" property="lock_count_reset"/>
		<result column="lock_time" jdbcType="INTEGER" property="lock_time"/>
		<result column="fail_count" jdbcType="INTEGER" property="fail_count"/>
		<result column="lock_ip" jdbcType="VARCHAR" property="lock_ip"/>
		<result column="password_verify" jdbcType="INTEGER" property="password_verify"/>
		<result column="password_newuser_forcechange" jdbcType="INTEGER" property="password_newuser_forcechange"/>
		<result column="password_verification_times" jdbcType="INTEGER" property="password_verification_times"/>
		<result column="new_user_default_password" jdbcType="VARCHAR" property="new_user_default_password"/>
		<result column="password_cycle" jdbcType="INTEGER" property="password_cycle"/>
		<result column="web_timeout" jdbcType="INTEGER" property="web_timeout"/>
		<result column="same-user" jdbcType="INTEGER" property="same_user"/>
		<result column="admin_login_ip" jdbcType="VARCHAR" property="admin_login_ip"/>
	</resultMap>

	<resultMap id="configLoginRecordCounts" type="java.lang.Long">
		<result column="recordCounts" jdbcType="BIGINT"/>
	</resultMap>

	<insert id="addConfigLogin" parameterType="com.longersec.blj.domain.ConfigLogin">
		INSERT INTO lsblj_config_login
		<set>
		
		<if test="lock_type != null">`lock_type`=#{lock_type},</if>
		<if test="lock_try_count != null">`lock_try_count`=#{lock_try_count},</if>
		<if test="lock_time_length != null">`lock_time_length`=#{lock_time_length},</if>
		<if test="lock_count_reset != null">`lock_count_reset`=#{lock_count_reset},</if>
		<if test="lock_time != null">`lock_time`=#{lock_time},</if>
		<if test="fail_count != null">`fail_count`=#{fail_count},</if>
		<if test="lock_ip != null">`lock_ip`=#{lock_ip},</if>
		<if test="password_verify != null">`password_verify`=#{password_verify},</if>
		<if test="password_newuser_forcechange != null">`password_newuser_forcechange`=#{password_newuser_forcechange},</if>
		<if test="password_verification_times != null">`password_verification_times`=#{password_verification_times},</if>
		<if test="new_user_default_password != null">`new_user_default_password`=#{new_user_default_password},</if>
		<if test="password_cycle != null">`password_cycle`=#{password_cycle},</if>
		<if test="web_timeout != null">`web_timeout`=#{web_timeout},</if>
		<if test="same_user != null">`same_user`=#{same_user},</if>
		<if test="password_verification_times != null">`password_verification_times`=#{password_verification_times},</if>
		<if test="new_user_default_password != null">`new_user_default_password`=AES_ENCRYPT(#{new_user_default_password},(select aeskey from lsblj_config_password_encrypt_key limit 1)),</if>
		</set>
	</insert>

	<update id="editConfigLogin" parameterType="com.longersec.blj.domain.ConfigLogin">
		UPDATE lsblj_config_login
		<set>
		
		<if test="lock_type != null">`lock_type`=#{lock_type},</if>
		<if test="lock_try_count != null">`lock_try_count`=#{lock_try_count},</if>
		<if test="lock_time_length != null">`lock_time_length`=#{lock_time_length},</if>
		<if test="lock_count_reset != null">`lock_count_reset`=#{lock_count_reset},</if>
		<if test="lock_time != null">`lock_time`=#{lock_time},</if>
		<if test="fail_count != null">`fail_count`=#{fail_count},</if>
		<if test="lock_ip != null">`lock_ip`=#{lock_ip},</if>
		<if test="password_verify != null">`password_verify`=#{password_verify},</if>
		<if test="password_newuser_forcechange != null">`password_newuser_forcechange`=#{password_newuser_forcechange},</if>
		<if test="password_verification_times != null">`password_verification_times`=#{password_verification_times},</if>
		<if test="new_user_default_password != null">`new_user_default_password`=#{new_user_default_password},</if>
		<if test="password_cycle != null">`password_cycle`=#{password_cycle},</if>
		<if test="web_timeout != null">`web_timeout`=#{web_timeout},</if>
		<if test="same_user != null">`same_user`=#{same_user},</if>
		<if test="password_verification_times != null">`password_verification_times`=#{password_verification_times},</if>
		<if test="new_user_default_password != null">`new_user_default_password`=AES_ENCRYPT(#{new_user_default_password},(select aeskey from lsblj_config_password_encrypt_key limit 1)),</if>
		<if test="admin_login_ip != null">`admin_login_ip`=#{admin_login_ip},</if>
		</set>
		where id=#{id}
	</update>

	<delete id="delConfigLogin" parameterType="java.util.List">
		DELETE FROM lsblj_config_login
		where id IN (
		<foreach collection="list" item="item" separator=",">
		#{item},
		</foreach>
		0)
	</delete>
	<select id="findAll" resultMap="BaseResultMap, configLoginRecordCounts">
		SELECT 
		SQL_CALC_FOUND_ROWS 
		AES_DECRYPT(new_user_default_password,(select aeskey from lsblj_config_password_encrypt_key limit 1)) new_user_default_password, lsblj_config_login.* FROM lsblj_config_login 
		<if test="page_start != null and page_length != null">
		LIMIT #{page_start,jdbcType=INTEGER},#{page_length,jdbcType=INTEGER}
		</if>
		;SELECT found_rows() AS recordCounts;
	</select>
</mapper>
